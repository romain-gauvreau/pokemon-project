components:
  schemas:
    Trainer:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        password:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        birthdate:
          type: date
        role:
          type: string
          enum: [ trainer, admin ]
      example:
        id: 12
        firstName: John
        lastName: Smith
        username: trainer12
        password: $2b$08$76pV0gOKWq9yKIcSyanCtLYnRANie5pX2vAB8qROSU7ohHDjNESTb
        birthdate: 1985-10-08T00:00:00.000Z
        role: trainer
        createdAt: 2023-01-01T12:26:30.000Z
        updatedAt: 2023-01-01T12:26:30.000Z
    Pokemon:
      type: object
      properties:
        id:
          type: integer
        species:
          type: string
        name:
          type: string
        level:
          type: integer
        gender:
          type: string
        height:
          type: integer
        weight:
          type: integer
        isChromatic:
          type: boolean
        trainerId:
          type: integer
      example:
        id: 1
        species: pikachu
        name: pikachu_lvl12
        level: 12
        gender: unknown
        height: 140
        weight: 24
        isChromatic: false
        createdAt: 2023-01-01T22:24:51.000Z
        updatedAt: 2023-01-01T22:24:51.000Z
        trainerId: 4
    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        expires: 2020-05-12T16:18:04.793Z

    AuthTokens:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/Token'
        refresh:
          $ref: '#/components/schemas/Token'

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found
    DuplicateUsername:
      description: Username already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Username already taken
    TrainerNotFound:
      description: Trainer not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Trainer not found


  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
